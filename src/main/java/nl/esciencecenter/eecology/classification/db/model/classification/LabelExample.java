package nl.esciencecenter.eecology.classification.db.model.classification;

import java.util.ArrayList;
import java.util.List;

public class LabelExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table classification.label
     *
     * @mbggenerated Mon Jul 07 16:43:08 CEST 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table classification.label
     *
     * @mbggenerated Mon Jul 07 16:43:08 CEST 2014
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table classification.label
     *
     * @mbggenerated Mon Jul 07 16:43:08 CEST 2014
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table classification.label
     *
     * @mbggenerated Mon Jul 07 16:43:08 CEST 2014
     */
    public LabelExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table classification.label
     *
     * @mbggenerated Mon Jul 07 16:43:08 CEST 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table classification.label
     *
     * @mbggenerated Mon Jul 07 16:43:08 CEST 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table classification.label
     *
     * @mbggenerated Mon Jul 07 16:43:08 CEST 2014
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table classification.label
     *
     * @mbggenerated Mon Jul 07 16:43:08 CEST 2014
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table classification.label
     *
     * @mbggenerated Mon Jul 07 16:43:08 CEST 2014
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table classification.label
     *
     * @mbggenerated Mon Jul 07 16:43:08 CEST 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table classification.label
     *
     * @mbggenerated Mon Jul 07 16:43:08 CEST 2014
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table classification.label
     *
     * @mbggenerated Mon Jul 07 16:43:08 CEST 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table classification.label
     *
     * @mbggenerated Mon Jul 07 16:43:08 CEST 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table classification.label
     *
     * @mbggenerated Mon Jul 07 16:43:08 CEST 2014
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table classification.label
     *
     * @mbggenerated Mon Jul 07 16:43:08 CEST 2014
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andLabel_idIsNull() {
            addCriterion("label_id is null");
            return (Criteria) this;
        }

        public Criteria andLabel_idIsNotNull() {
            addCriterion("label_id is not null");
            return (Criteria) this;
        }

        public Criteria andLabel_idEqualTo(Integer value) {
            addCriterion("label_id =", value, "label_id");
            return (Criteria) this;
        }

        public Criteria andLabel_idNotEqualTo(Integer value) {
            addCriterion("label_id <>", value, "label_id");
            return (Criteria) this;
        }

        public Criteria andLabel_idGreaterThan(Integer value) {
            addCriterion("label_id >", value, "label_id");
            return (Criteria) this;
        }

        public Criteria andLabel_idGreaterThanOrEqualTo(Integer value) {
            addCriterion("label_id >=", value, "label_id");
            return (Criteria) this;
        }

        public Criteria andLabel_idLessThan(Integer value) {
            addCriterion("label_id <", value, "label_id");
            return (Criteria) this;
        }

        public Criteria andLabel_idLessThanOrEqualTo(Integer value) {
            addCriterion("label_id <=", value, "label_id");
            return (Criteria) this;
        }

        public Criteria andLabel_idIn(List<Integer> values) {
            addCriterion("label_id in", values, "label_id");
            return (Criteria) this;
        }

        public Criteria andLabel_idNotIn(List<Integer> values) {
            addCriterion("label_id not in", values, "label_id");
            return (Criteria) this;
        }

        public Criteria andLabel_idBetween(Integer value1, Integer value2) {
            addCriterion("label_id between", value1, value2, "label_id");
            return (Criteria) this;
        }

        public Criteria andLabel_idNotBetween(Integer value1, Integer value2) {
            addCriterion("label_id not between", value1, value2, "label_id");
            return (Criteria) this;
        }

        public Criteria andLabel_schema_idIsNull() {
            addCriterion("label_schema_id is null");
            return (Criteria) this;
        }

        public Criteria andLabel_schema_idIsNotNull() {
            addCriterion("label_schema_id is not null");
            return (Criteria) this;
        }

        public Criteria andLabel_schema_idEqualTo(Integer value) {
            addCriterion("label_schema_id =", value, "label_schema_id");
            return (Criteria) this;
        }

        public Criteria andLabel_schema_idNotEqualTo(Integer value) {
            addCriterion("label_schema_id <>", value, "label_schema_id");
            return (Criteria) this;
        }

        public Criteria andLabel_schema_idGreaterThan(Integer value) {
            addCriterion("label_schema_id >", value, "label_schema_id");
            return (Criteria) this;
        }

        public Criteria andLabel_schema_idGreaterThanOrEqualTo(Integer value) {
            addCriterion("label_schema_id >=", value, "label_schema_id");
            return (Criteria) this;
        }

        public Criteria andLabel_schema_idLessThan(Integer value) {
            addCriterion("label_schema_id <", value, "label_schema_id");
            return (Criteria) this;
        }

        public Criteria andLabel_schema_idLessThanOrEqualTo(Integer value) {
            addCriterion("label_schema_id <=", value, "label_schema_id");
            return (Criteria) this;
        }

        public Criteria andLabel_schema_idIn(List<Integer> values) {
            addCriterion("label_schema_id in", values, "label_schema_id");
            return (Criteria) this;
        }

        public Criteria andLabel_schema_idNotIn(List<Integer> values) {
            addCriterion("label_schema_id not in", values, "label_schema_id");
            return (Criteria) this;
        }

        public Criteria andLabel_schema_idBetween(Integer value1, Integer value2) {
            addCriterion("label_schema_id between", value1, value2, "label_schema_id");
            return (Criteria) this;
        }

        public Criteria andLabel_schema_idNotBetween(Integer value1, Integer value2) {
            addCriterion("label_schema_id not between", value1, value2, "label_schema_id");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("name is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("name is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("name =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("name <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("name >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("name >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("name <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("name <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("name like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("name not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("name in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("name not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("name between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("name not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andRedIsNull() {
            addCriterion("red is null");
            return (Criteria) this;
        }

        public Criteria andRedIsNotNull() {
            addCriterion("red is not null");
            return (Criteria) this;
        }

        public Criteria andRedEqualTo(Short value) {
            addCriterion("red =", value, "red");
            return (Criteria) this;
        }

        public Criteria andRedNotEqualTo(Short value) {
            addCriterion("red <>", value, "red");
            return (Criteria) this;
        }

        public Criteria andRedGreaterThan(Short value) {
            addCriterion("red >", value, "red");
            return (Criteria) this;
        }

        public Criteria andRedGreaterThanOrEqualTo(Short value) {
            addCriterion("red >=", value, "red");
            return (Criteria) this;
        }

        public Criteria andRedLessThan(Short value) {
            addCriterion("red <", value, "red");
            return (Criteria) this;
        }

        public Criteria andRedLessThanOrEqualTo(Short value) {
            addCriterion("red <=", value, "red");
            return (Criteria) this;
        }

        public Criteria andRedIn(List<Short> values) {
            addCriterion("red in", values, "red");
            return (Criteria) this;
        }

        public Criteria andRedNotIn(List<Short> values) {
            addCriterion("red not in", values, "red");
            return (Criteria) this;
        }

        public Criteria andRedBetween(Short value1, Short value2) {
            addCriterion("red between", value1, value2, "red");
            return (Criteria) this;
        }

        public Criteria andRedNotBetween(Short value1, Short value2) {
            addCriterion("red not between", value1, value2, "red");
            return (Criteria) this;
        }

        public Criteria andGreenIsNull() {
            addCriterion("green is null");
            return (Criteria) this;
        }

        public Criteria andGreenIsNotNull() {
            addCriterion("green is not null");
            return (Criteria) this;
        }

        public Criteria andGreenEqualTo(Short value) {
            addCriterion("green =", value, "green");
            return (Criteria) this;
        }

        public Criteria andGreenNotEqualTo(Short value) {
            addCriterion("green <>", value, "green");
            return (Criteria) this;
        }

        public Criteria andGreenGreaterThan(Short value) {
            addCriterion("green >", value, "green");
            return (Criteria) this;
        }

        public Criteria andGreenGreaterThanOrEqualTo(Short value) {
            addCriterion("green >=", value, "green");
            return (Criteria) this;
        }

        public Criteria andGreenLessThan(Short value) {
            addCriterion("green <", value, "green");
            return (Criteria) this;
        }

        public Criteria andGreenLessThanOrEqualTo(Short value) {
            addCriterion("green <=", value, "green");
            return (Criteria) this;
        }

        public Criteria andGreenIn(List<Short> values) {
            addCriterion("green in", values, "green");
            return (Criteria) this;
        }

        public Criteria andGreenNotIn(List<Short> values) {
            addCriterion("green not in", values, "green");
            return (Criteria) this;
        }

        public Criteria andGreenBetween(Short value1, Short value2) {
            addCriterion("green between", value1, value2, "green");
            return (Criteria) this;
        }

        public Criteria andGreenNotBetween(Short value1, Short value2) {
            addCriterion("green not between", value1, value2, "green");
            return (Criteria) this;
        }

        public Criteria andBlueIsNull() {
            addCriterion("blue is null");
            return (Criteria) this;
        }

        public Criteria andBlueIsNotNull() {
            addCriterion("blue is not null");
            return (Criteria) this;
        }

        public Criteria andBlueEqualTo(Short value) {
            addCriterion("blue =", value, "blue");
            return (Criteria) this;
        }

        public Criteria andBlueNotEqualTo(Short value) {
            addCriterion("blue <>", value, "blue");
            return (Criteria) this;
        }

        public Criteria andBlueGreaterThan(Short value) {
            addCriterion("blue >", value, "blue");
            return (Criteria) this;
        }

        public Criteria andBlueGreaterThanOrEqualTo(Short value) {
            addCriterion("blue >=", value, "blue");
            return (Criteria) this;
        }

        public Criteria andBlueLessThan(Short value) {
            addCriterion("blue <", value, "blue");
            return (Criteria) this;
        }

        public Criteria andBlueLessThanOrEqualTo(Short value) {
            addCriterion("blue <=", value, "blue");
            return (Criteria) this;
        }

        public Criteria andBlueIn(List<Short> values) {
            addCriterion("blue in", values, "blue");
            return (Criteria) this;
        }

        public Criteria andBlueNotIn(List<Short> values) {
            addCriterion("blue not in", values, "blue");
            return (Criteria) this;
        }

        public Criteria andBlueBetween(Short value1, Short value2) {
            addCriterion("blue between", value1, value2, "blue");
            return (Criteria) this;
        }

        public Criteria andBlueNotBetween(Short value1, Short value2) {
            addCriterion("blue not between", value1, value2, "blue");
            return (Criteria) this;
        }

        public Criteria andDescriptionIsNull() {
            addCriterion("description is null");
            return (Criteria) this;
        }

        public Criteria andDescriptionIsNotNull() {
            addCriterion("description is not null");
            return (Criteria) this;
        }

        public Criteria andDescriptionEqualTo(String value) {
            addCriterion("description =", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotEqualTo(String value) {
            addCriterion("description <>", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionGreaterThan(String value) {
            addCriterion("description >", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionGreaterThanOrEqualTo(String value) {
            addCriterion("description >=", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLessThan(String value) {
            addCriterion("description <", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLessThanOrEqualTo(String value) {
            addCriterion("description <=", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLike(String value) {
            addCriterion("description like", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotLike(String value) {
            addCriterion("description not like", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionIn(List<String> values) {
            addCriterion("description in", values, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotIn(List<String> values) {
            addCriterion("description not in", values, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionBetween(String value1, String value2) {
            addCriterion("description between", value1, value2, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotBetween(String value1, String value2) {
            addCriterion("description not between", value1, value2, "description");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table classification.label
     *
     * @mbggenerated do_not_delete_during_merge Mon Jul 07 16:43:08 CEST 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table classification.label
     *
     * @mbggenerated Mon Jul 07 16:43:08 CEST 2014
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value) {
            super();
            this.condition = condition;
            this.value = value;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.betweenValue = true;
        }
    }
}