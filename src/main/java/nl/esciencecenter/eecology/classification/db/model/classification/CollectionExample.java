package nl.esciencecenter.eecology.classification.db.model.classification;

import java.util.ArrayList;
import java.util.List;

public class CollectionExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table classification.collection
     *
     * @mbggenerated Mon Jul 07 16:43:08 CEST 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table classification.collection
     *
     * @mbggenerated Mon Jul 07 16:43:08 CEST 2014
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table classification.collection
     *
     * @mbggenerated Mon Jul 07 16:43:08 CEST 2014
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table classification.collection
     *
     * @mbggenerated Mon Jul 07 16:43:08 CEST 2014
     */
    public CollectionExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table classification.collection
     *
     * @mbggenerated Mon Jul 07 16:43:08 CEST 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table classification.collection
     *
     * @mbggenerated Mon Jul 07 16:43:08 CEST 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table classification.collection
     *
     * @mbggenerated Mon Jul 07 16:43:08 CEST 2014
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table classification.collection
     *
     * @mbggenerated Mon Jul 07 16:43:08 CEST 2014
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table classification.collection
     *
     * @mbggenerated Mon Jul 07 16:43:08 CEST 2014
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table classification.collection
     *
     * @mbggenerated Mon Jul 07 16:43:08 CEST 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table classification.collection
     *
     * @mbggenerated Mon Jul 07 16:43:08 CEST 2014
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table classification.collection
     *
     * @mbggenerated Mon Jul 07 16:43:08 CEST 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table classification.collection
     *
     * @mbggenerated Mon Jul 07 16:43:08 CEST 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table classification.collection
     *
     * @mbggenerated Mon Jul 07 16:43:08 CEST 2014
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table classification.collection
     *
     * @mbggenerated Mon Jul 07 16:43:08 CEST 2014
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCollection_idIsNull() {
            addCriterion("collection_id is null");
            return (Criteria) this;
        }

        public Criteria andCollection_idIsNotNull() {
            addCriterion("collection_id is not null");
            return (Criteria) this;
        }

        public Criteria andCollection_idEqualTo(Integer value) {
            addCriterion("collection_id =", value, "collection_id");
            return (Criteria) this;
        }

        public Criteria andCollection_idNotEqualTo(Integer value) {
            addCriterion("collection_id <>", value, "collection_id");
            return (Criteria) this;
        }

        public Criteria andCollection_idGreaterThan(Integer value) {
            addCriterion("collection_id >", value, "collection_id");
            return (Criteria) this;
        }

        public Criteria andCollection_idGreaterThanOrEqualTo(Integer value) {
            addCriterion("collection_id >=", value, "collection_id");
            return (Criteria) this;
        }

        public Criteria andCollection_idLessThan(Integer value) {
            addCriterion("collection_id <", value, "collection_id");
            return (Criteria) this;
        }

        public Criteria andCollection_idLessThanOrEqualTo(Integer value) {
            addCriterion("collection_id <=", value, "collection_id");
            return (Criteria) this;
        }

        public Criteria andCollection_idIn(List<Integer> values) {
            addCriterion("collection_id in", values, "collection_id");
            return (Criteria) this;
        }

        public Criteria andCollection_idNotIn(List<Integer> values) {
            addCriterion("collection_id not in", values, "collection_id");
            return (Criteria) this;
        }

        public Criteria andCollection_idBetween(Integer value1, Integer value2) {
            addCriterion("collection_id between", value1, value2, "collection_id");
            return (Criteria) this;
        }

        public Criteria andCollection_idNotBetween(Integer value1, Integer value2) {
            addCriterion("collection_id not between", value1, value2, "collection_id");
            return (Criteria) this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("type is null");
            return (Criteria) this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("type is not null");
            return (Criteria) this;
        }

        public Criteria andTypeEqualTo(String value) {
            addCriterion("type =", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotEqualTo(String value) {
            addCriterion("type <>", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThan(String value) {
            addCriterion("type >", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(String value) {
            addCriterion("type >=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThan(String value) {
            addCriterion("type <", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThanOrEqualTo(String value) {
            addCriterion("type <=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLike(String value) {
            addCriterion("type like", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotLike(String value) {
            addCriterion("type not like", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeIn(List<String> values) {
            addCriterion("type in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotIn(List<String> values) {
            addCriterion("type not in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeBetween(String value1, String value2) {
            addCriterion("type between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotBetween(String value1, String value2) {
            addCriterion("type not between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andCollection_group_idIsNull() {
            addCriterion("collection_group_id is null");
            return (Criteria) this;
        }

        public Criteria andCollection_group_idIsNotNull() {
            addCriterion("collection_group_id is not null");
            return (Criteria) this;
        }

        public Criteria andCollection_group_idEqualTo(Integer value) {
            addCriterion("collection_group_id =", value, "collection_group_id");
            return (Criteria) this;
        }

        public Criteria andCollection_group_idNotEqualTo(Integer value) {
            addCriterion("collection_group_id <>", value, "collection_group_id");
            return (Criteria) this;
        }

        public Criteria andCollection_group_idGreaterThan(Integer value) {
            addCriterion("collection_group_id >", value, "collection_group_id");
            return (Criteria) this;
        }

        public Criteria andCollection_group_idGreaterThanOrEqualTo(Integer value) {
            addCriterion("collection_group_id >=", value, "collection_group_id");
            return (Criteria) this;
        }

        public Criteria andCollection_group_idLessThan(Integer value) {
            addCriterion("collection_group_id <", value, "collection_group_id");
            return (Criteria) this;
        }

        public Criteria andCollection_group_idLessThanOrEqualTo(Integer value) {
            addCriterion("collection_group_id <=", value, "collection_group_id");
            return (Criteria) this;
        }

        public Criteria andCollection_group_idIn(List<Integer> values) {
            addCriterion("collection_group_id in", values, "collection_group_id");
            return (Criteria) this;
        }

        public Criteria andCollection_group_idNotIn(List<Integer> values) {
            addCriterion("collection_group_id not in", values, "collection_group_id");
            return (Criteria) this;
        }

        public Criteria andCollection_group_idBetween(Integer value1, Integer value2) {
            addCriterion("collection_group_id between", value1, value2, "collection_group_id");
            return (Criteria) this;
        }

        public Criteria andCollection_group_idNotBetween(Integer value1, Integer value2) {
            addCriterion("collection_group_id not between", value1, value2, "collection_group_id");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table classification.collection
     *
     * @mbggenerated do_not_delete_during_merge Mon Jul 07 16:43:08 CEST 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table classification.collection
     *
     * @mbggenerated Mon Jul 07 16:43:08 CEST 2014
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value) {
            super();
            this.condition = condition;
            this.value = value;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.betweenValue = true;
        }
    }
}